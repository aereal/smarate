// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package dto

type IFightResult interface {
	IsIFightResult()
}

type Fighter struct {
	ID           int                           `json:"id"`
	Name         *LocalizedName                `json:"name"`
	FightResults *FighterFightResultConnection `json:"fightResults"`
}

type FighterFightResult struct {
	MyFighter    *Fighter `json:"myFighter"`
	RivalFighter *Fighter `json:"rivalFighter"`
	Won          bool     `json:"won"`
	RecordedAt   string   `json:"recordedAt"`
}

func (FighterFightResult) IsIFightResult() {}

type FighterFightResultConnection struct {
	Nodes           []*FighterFightResult `json:"nodes"`
	WinRatio        float64               `json:"winRatio"`
	MostWonFighters *MatchupConnection    `json:"mostWonFighters"`
}

type GlobalFightResult struct {
	WonFighter  *Fighter `json:"wonFighter"`
	LostFighter *Fighter `json:"lostFighter"`
	RecordedAt  string   `json:"recordedAt"`
}

type GlobalFightResultConnection struct {
	Nodes []*GlobalFightResult `json:"nodes"`
}

type LocalizedName struct {
	Ja string `json:"ja"`
}

type Matchup struct {
	RivalFighter *Fighter `json:"rivalFighter"`
	WinRatio     float64  `json:"winRatio"`
}

type MatchupConnection struct {
	Nodes []*Matchup `json:"nodes"`
}

type User struct {
	ID           string                     `json:"id"`
	Preference   *UserPreference            `json:"preference"`
	FightResults *UserFightResultConnection `json:"fightResults"`
}

type UserFightResult struct {
	MyFighter    *Fighter `json:"myFighter"`
	RivalFighter *Fighter `json:"rivalFighter"`
	Won          bool     `json:"won"`
}

func (UserFightResult) IsIFightResult() {}

type UserFightResultConnection struct {
	Nodes []*UserFightResult `json:"nodes"`
}

type UserPreference struct {
	DefaultFighterID int `json:"defaultFighterID"`
}
