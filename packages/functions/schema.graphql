type Query {
  visitor: User
  fightResults(first: Int!): FightResultConnection!
  fighter(id: Int!): Fighter
}

type Mutation {
  setPreference(defaultFighterID: Int): Boolean!
  recordResult(
    myFighterID: Int!,
    rivalFighterID: Int!,
    won: Boolean!
  ): Boolean!
}

type User {
  id: String!
  preference: UserPreference!
  fightResults(first: Int!): UserFightResultConnection!
}

type UserPreference {
  defaultFighterID: Int!
}

type Fighter {
  id: Int!
  name: LocalizedName!
}

type LocalizedName {
  ja: String!
}

type FightResultConnection {
  nodes: [FightResult!]!
}

type UserFightResultConnection {
  nodes: [UserFightResult!]!
}

type FightResult {
  wonFighter: Fighter!
  lostFighter: Fighter!
  recordedAt: String!
}

type UserFightResult {
  myFighter: Fighter!
  rivalFighter: Fighter!
  won: Boolean!
}
